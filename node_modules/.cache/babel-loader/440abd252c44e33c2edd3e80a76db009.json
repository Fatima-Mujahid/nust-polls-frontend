{"ast":null,"code":"var _jsxFileName = \"C:\\\\nust-polls\\\\nust-polls-frontend\\\\src\\\\Components\\\\Existing\\\\NewPoll\\\\CenteredTabs\\\\QuestionsTab\\\\Question\\\\MultipleChoice\\\\MultipleChoice.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Choice from \"./Choice/Choice\";\nimport AddChoice from \"./Choice/AddChoice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MultipleChoice(props) {\n  _s();\n\n  const [options, setOptions] = useState(props.question.options);\n\n  function addOption() {\n    const newOption = props.onAddOption(props.id, \"Option\");\n    setOptions([...options, newOption]);\n  }\n\n  function deleteOption(index) {\n    const newOptions = props.onDeleteOption(props.id, index);\n    console.log(props.id);\n    console.log(newOptions);\n    setOptions([...newOptions]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [options && options.length > 0 && options.map(option => /*#__PURE__*/_jsxDEV(Choice, {\n      index: options.indexOf(option),\n      onDelete: deleteOption,\n      value: option.name,\n      name: \"id\"\n    }, option.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(AddChoice, {\n      onAddOption: addOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MultipleChoice, \"3WuXiWswnrj5bPoDxqTfLORj45k=\");\n\n_c = MultipleChoice;\nexport default MultipleChoice;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleChoice\");","map":{"version":3,"sources":["C:/nust-polls/nust-polls-frontend/src/Components/Existing/NewPoll/CenteredTabs/QuestionsTab/Question/MultipleChoice/MultipleChoice.js"],"names":["React","useEffect","useState","Choice","AddChoice","MultipleChoice","props","options","setOptions","question","addOption","newOption","onAddOption","id","deleteOption","index","newOptions","onDeleteOption","console","log","length","map","option","indexOf","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAE3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAACI,KAAK,CAACG,QAAN,CAAeF,OAAhB,CAAtC;;AAGA,WAASG,SAAT,GAAqB;AACjB,UAAMC,SAAS,GAAGL,KAAK,CAACM,WAAN,CAAkBN,KAAK,CAACO,EAAxB,EAA4B,QAA5B,CAAlB;AACAL,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAYI,SAAZ,CAAD,CAAV;AACH;;AAED,WAASG,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,UAAMC,UAAU,GAAGV,KAAK,CAACW,cAAN,CAAqBX,KAAK,CAACO,EAA3B,EAA8BE,KAA9B,CAAnB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACO,EAAlB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACAR,IAAAA,UAAU,CAAC,CAAC,GAAGQ,UAAJ,CAAD,CAAV;AACH;;AAED,sBACI;AAAA,eACKT,OAAO,IAAIA,OAAO,CAACa,MAAR,GAAiB,CAA5B,IAAiCb,OAAO,CAACc,GAAR,CAAaC,MAAD,iBAC1C,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEf,OAAO,CAACgB,OAAR,CAAgBD,MAAhB,CAAf;AAAwC,MAAA,QAAQ,EAAER,YAAlD;AAAgF,MAAA,KAAK,EAAEQ,MAAM,CAACE,IAA9F;AAAoG,MAAA,IAAI,EAAE;AAA1G,OAAqEF,MAAM,CAACT,EAA5E;AAAA;AAAA;AAAA;AAAA,YAD8B,CADtC,eAII,QAAC,SAAD;AAAW,MAAA,WAAW,EAAEH;AAAxB;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAzBQL,c;;KAAAA,c;AA2BT,eAAeA,cAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport Choice from \"./Choice/Choice\";\r\nimport AddChoice from \"./Choice/AddChoice\";\r\n\r\nfunction MultipleChoice(props) {\r\n\r\n    const [options, setOptions] = useState(props.question.options);\r\n\r\n\r\n    function addOption() {\r\n        const newOption = props.onAddOption(props.id, \"Option\")\r\n        setOptions([...options,newOption])\r\n    }\r\n\r\n    function deleteOption(index) {\r\n        const newOptions = props.onDeleteOption(props.id,index)\r\n        console.log(props.id);\r\n        console.log(newOptions);\r\n        setOptions([...newOptions])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {options && options.length > 0 && options.map((option) => (\r\n                <Choice index={options.indexOf(option)} onDelete={deleteOption} key={option.id} value={option.name} name={\"id\"}/>\r\n            ))}\r\n            <AddChoice onAddOption={addOption} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MultipleChoice;"]},"metadata":{},"sourceType":"module"}