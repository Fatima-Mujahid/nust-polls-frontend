{"ast":null,"code":"var _jsxFileName = \"C:\\\\nust-polls\\\\nust-polls-frontend\\\\src\\\\Components\\\\Existing\\\\NewPoll\\\\CenteredTabs\\\\QuestionsTab\\\\Question\\\\Question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { EditText } from \"react-edit-text\";\nimport 'react-edit-text/dist/index.css';\nimport './Question.css';\nimport AnimatedDropdown from \"./Animated DropDown/AnimatedDropDown\";\nimport 'react-dropdown/style.css';\nimport ShortText from \"./ShortText/ShortText\";\nimport MultipleChoice from \"./MultipleChoice/MultipleChoice\";\nimport { fadeIn } from \"react-animations\";\nimport styled, { keyframes } from \"styled-components\";\nimport { Trash } from 'lucide-react';\nimport { log } from \"util\";\nimport { useSpring, animated } from \"react-spring\";\nimport { scale } from \"react-animations/lib/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FadeIn = styled.div`\n      animation: 0.5s ${keyframes(fadeIn)};\n    `;\n_c = FadeIn;\n\nfunction Question(props) {\n  _s();\n\n  const [name, setName] = useState();\n  const [question, setQuestion] = useState(props.question);\n\n  function changeName(value) {\n    setName(value.value);\n    setQuestion(props.rename(value.value, props.id));\n  }\n\n  const [selected, setSelected] = useState(props.question.type);\n\n  const HandleSelection = val => {\n    setSelected(val);\n  };\n\n  const url = \"\"; // useEffect(() => {\n  //     return () => {\n  //         fetch(url, {\n  //             method: \"POST\", headers: {\n  //                 'Content-Type': 'application/json', boyd: JSON.stringify({\n  //                     name: name.value,\n  //                 })\n  //             }\n  //         })\n  //     };\n  // }, [name]);\n\n  function deleteHandler() {\n    props.onDelete(props.id);\n  }\n\n  function onSwitch(type) {\n    setQuestion(props.switch(name, props.id, type));\n  }\n\n  function addOptionHandler(index, option) {\n    props.onAddOption(index, option);\n    return question.options[question.options.length - 1];\n  }\n\n  function deleteOptionHandler(questionIndex, optionIndex) {\n    return props.onDeleteOption(questionIndex, optionIndex);\n  }\n\n  const animationProps = useSpring({\n    to: {\n      opacity: 1,\n      transform: scale(1)\n    },\n    from: {\n      opacity: 0,\n      transform: scale(0.95)\n    },\n    config: {\n      duration: 250\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(animated.div, {\n    style: {\n      opacity: animationProps.opacity,\n      transform: animationProps.transform\n    },\n    className: \"question-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-heading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(EditText, {\n          defaultValue: name,\n          placeholder: props.question.statement,\n          onSave: changeName,\n          className: \"question-title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-questions\",\n        children: /*#__PURE__*/_jsxDEV(AnimatedDropdown, {\n          id: props.id,\n          switch: onSwitch,\n          text: props.question.statement,\n          selected: selected,\n          onSelection: HandleSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FadeIn, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-details\",\n        children: selected === \"TextBased\" ? /*#__PURE__*/_jsxDEV(ShortText, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 45\n        }, this) : /*#__PURE__*/_jsxDEV(MultipleChoice, {\n          onDeleteOption: deleteOptionHandler,\n          onAddOption: addOptionHandler,\n          id: props.id,\n          question: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-delete-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Trash, {\n        className: \"question-delete-icon\",\n        strokeWidth: 2,\n        onClick: () => deleteHandler(),\n        size: 35\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Question, \"KtUTLARbPgRb5ALutapt1CAjV1Q=\", false, function () {\n  return [useSpring];\n});\n\n_c2 = Question;\nexport default Question;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FadeIn\");\n$RefreshReg$(_c2, \"Question\");","map":{"version":3,"sources":["C:/nust-polls/nust-polls-frontend/src/Components/Existing/NewPoll/CenteredTabs/QuestionsTab/Question/Question.js"],"names":["React","useEffect","useState","EditText","AnimatedDropdown","ShortText","MultipleChoice","fadeIn","styled","keyframes","Trash","log","useSpring","animated","scale","FadeIn","div","Question","props","name","setName","question","setQuestion","changeName","value","rename","id","selected","setSelected","type","HandleSelection","val","url","deleteHandler","onDelete","onSwitch","switch","addOptionHandler","index","option","onAddOption","options","length","deleteOptionHandler","questionIndex","optionIndex","onDeleteOption","animationProps","to","opacity","transform","from","config","duration","statement"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {EditText} from \"react-edit-text\";\r\nimport 'react-edit-text/dist/index.css';\r\nimport './Question.css'\r\nimport AnimatedDropdown from \"./Animated DropDown/AnimatedDropDown\";\r\nimport 'react-dropdown/style.css';\r\nimport ShortText from \"./ShortText/ShortText\";\r\nimport MultipleChoice from \"./MultipleChoice/MultipleChoice\";\r\nimport {fadeIn} from \"react-animations\";\r\nimport styled, {keyframes} from \"styled-components\";\r\nimport {Trash} from 'lucide-react'\r\nimport {log} from \"util\";\r\nimport {useSpring,animated} from \"react-spring\";\r\nimport {scale} from \"react-animations/lib/utils\";\r\n\r\nconst FadeIn = styled.div`\r\n      animation: 0.5s ${keyframes(fadeIn)};\r\n    `;\r\n\r\nfunction Question(props) {\r\n    const [name, setName] = useState();\r\n\r\n    const [question, setQuestion] = useState(props.question);\r\n\r\n\r\n\r\n    function changeName(value) {\r\n        setName(value.value)\r\n        setQuestion(props.rename(value.value,props.id))\r\n    }\r\n\r\n    const [selected, setSelected] = useState(props.question.type);\r\n\r\n    const HandleSelection = (val) => {\r\n        setSelected(val)\r\n    }\r\n\r\n\r\n    const url = \"\"\r\n\r\n    // useEffect(() => {\r\n    //     return () => {\r\n    //         fetch(url, {\r\n    //             method: \"POST\", headers: {\r\n    //                 'Content-Type': 'application/json', boyd: JSON.stringify({\r\n    //                     name: name.value,\r\n    //                 })\r\n    //             }\r\n    //         })\r\n    //     };\r\n    // }, [name]);\r\n\r\n\r\n    function deleteHandler() {\r\n        props.onDelete(props.id);\r\n    }\r\n\r\n    function onSwitch(type){\r\n        setQuestion(props.switch(name,props.id,type))\r\n    }\r\n\r\n\r\n    function addOptionHandler(index,option) {\r\n        props.onAddOption(index,option)\r\n        return question.options[question.options.length-1]\r\n    }\r\n\r\n    function deleteOptionHandler(questionIndex,optionIndex) {\r\n        return props.onDeleteOption(questionIndex,optionIndex)\r\n    }\r\n\r\n    const animationProps = useSpring({\r\n        to: { opacity: 1, transform: scale(1), },\r\n        from: { opacity: 0, transform: scale(0.95),},\r\n        config: { duration: 250 },\r\n    })\r\n\r\n\r\n    return (<animated.div style={{opacity: animationProps.opacity, transform: animationProps.transform}} className={\"question-body\"}>\r\n\r\n        <div  className={\"question-heading\"}>\r\n            <div>\r\n                <EditText defaultValue={name} placeholder={props.question.statement} onSave={changeName} className={\"question-title\"}/>\r\n            </div>\r\n            <div className={\"dropdown-questions\"}>\r\n                <AnimatedDropdown id={props.id} switch={onSwitch} text={props.question.statement} selected={selected} onSelection={HandleSelection}/>\r\n            </div>\r\n        </div>\r\n        <FadeIn>\r\n            <div className={\"question-details\"}>\r\n                {selected === \"TextBased\" ? <ShortText/> : <MultipleChoice onDeleteOption={deleteOptionHandler} onAddOption={addOptionHandler} id={props.id} question={question} />}\r\n            </div>\r\n        </FadeIn>\r\n        <div className={\"question-delete-wrapper\"} >\r\n            <Trash className={\"question-delete-icon\"} strokeWidth={2} onClick={()=>deleteHandler()} size={35}  />\r\n        </div>\r\n    </animated.div>);\r\n}\r\n\r\nexport default Question;"]},"metadata":{},"sourceType":"module"}