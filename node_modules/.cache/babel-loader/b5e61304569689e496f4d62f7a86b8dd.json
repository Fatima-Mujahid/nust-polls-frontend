{"ast":null,"code":"var _jsxFileName = \"C:\\\\nust-polls\\\\nust-polls-frontend\\\\src\\\\Components\\\\Existing\\\\NewPoll\\\\CenteredTabs\\\\QuestionsTab\\\\QuestionsTab.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Plus } from 'lucide-react';\nimport './QuestionsTab.css';\nimport { EditText } from 'react-edit-text';\nimport 'react-edit-text/dist/index.css';\nimport Question from \"./Question/Question\";\nimport { v4 as uuid } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MCQ {\n  constructor() {\n    this.id = uuid();\n    this.type = \"MCQ\";\n    this.statement = \"Untitled Question\";\n    this.options = [\"Option 1\"];\n  }\n\n}\n\nclass TextBased {\n  constructor() {\n    this.id = uuid();\n    this.type = \"TextBased\";\n    this.statement = \"Untitled Question \";\n  }\n\n}\n\nclass Questions {\n  constructor() {\n    this.questions = [];\n    this.questions[0] = new TextBased();\n  }\n\n  switch(index) {\n    if (index === undefined) {\n      return;\n    }\n\n    console.log(\"index : \" + index);\n    console.log(\"this.questions[index] : \" + this.questions[index]);\n    console.log(\"this.questions[index].type : \" + this.questions[index].type);\n    this.questions[index].type === \"MCQ\" ? this.questions[index] = new TextBased() : this.questions[index] = new MCQ();\n    return this.questions;\n  }\n\n  rename(text, index) {\n    this.questions[index].statement = text;\n    return this.questions;\n  }\n\n}\n\nfunction QuestionsTab(props) {\n  _s();\n\n  const questionsList = new Questions();\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  function changeName(value) {\n    value.preventDefault();\n    setName(value);\n  }\n\n  const [questions, setQuestions] = useState(questionsList.questions);\n\n  function addQuestion() {\n    setQuestions([...questions, new TextBased()]);\n  }\n\n  function deleteQuestion(index) {\n    const newQuestions = questions.filter(question => {\n      console.log(\"questions.indexOf(question) : \" + questions.indexOf(question));\n      console.log(\"index : \" + index);\n      return questions.indexOf(question) !== index;\n    });\n    console.log(newQuestions);\n    setQuestions([...newQuestions]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"floating-action\",\n      children: /*#__PURE__*/_jsxDEV(Plus, {\n        onClick: addQuestion,\n        color: \"#085B91\",\n        strokeWidth: \"4\",\n        size: \"24\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-header\",\n      children: [/*#__PURE__*/_jsxDEV(EditText, {\n        defaultValue: name,\n        placeholder: \"Poll Name\",\n        onSave: changeName,\n        className: \"poll-name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditText, {\n        defaultValue: description,\n        placeholder: \"Poll Description\",\n        className: \"poll-desc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), questions.length > 0 && questions.map(question => /*#__PURE__*/_jsxDEV(Question, {\n        onDelete: deleteQuestion,\n        id: questions.indexOf(question),\n        title: question.statement,\n        type: question.type,\n        rename: questionsList.rename,\n        switch: questionsList.switch\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 13\n  }, this);\n}\n\n_s(QuestionsTab, \"ZVxu5sK1RAXSCriaG97Umu247Mw=\");\n\n_c = QuestionsTab;\nexport default QuestionsTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionsTab\");","map":{"version":3,"sources":["C:/nust-polls/nust-polls-frontend/src/Components/Existing/NewPoll/CenteredTabs/QuestionsTab/QuestionsTab.js"],"names":["React","useState","Plus","EditText","Question","v4","uuid","MCQ","constructor","id","type","statement","options","TextBased","Questions","questions","switch","index","undefined","console","log","rename","text","QuestionsTab","props","questionsList","name","setName","description","setDescription","changeName","value","preventDefault","setQuestions","addQuestion","deleteQuestion","newQuestions","filter","question","indexOf","length","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,IAAR,QAAmB,cAAnB;AACA,OAAO,oBAAP;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,OAAO,gCAAP;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;;;AAEA,MAAMC,GAAN,CAAU;AACNC,EAAAA,WAAW,GAAG;AACV,SAAKC,EAAL,GAAUH,IAAI,EAAd;AACA,SAAKI,IAAL,GAAY,KAAZ;AACA,SAAKC,SAAL,GAAiB,mBAAjB;AACA,SAAKC,OAAL,GAAe,CAAC,UAAD,CAAf;AACH;;AANK;;AAUV,MAAMC,SAAN,CAAgB;AACZL,EAAAA,WAAW,GAAG;AACV,SAAKC,EAAL,GAAUH,IAAI,EAAd;AACA,SAAKI,IAAL,GAAY,WAAZ;AACA,SAAKC,SAAL,GAAiB,oBAAjB;AACH;;AALW;;AAQhB,MAAMG,SAAN,CAAgB;AACZN,EAAAA,WAAW,GAAG;AACV,SAAKO,SAAL,GAAiB,EAAjB;AACA,SAAKA,SAAL,CAAe,CAAf,IAAoB,IAAIF,SAAJ,EAApB;AACH;;AAEDG,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACV,QAAGA,KAAK,KAAKC,SAAb,EAAwB;AAAC;AAAO;;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAWH,KAAvB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAA2B,KAAKL,SAAL,CAAeE,KAAf,CAAvC;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAgC,KAAKL,SAAL,CAAeE,KAAf,EAAsBP,IAAlE;AACA,SAAKK,SAAL,CAAeE,KAAf,EAAsBP,IAAtB,KAA+B,KAA/B,GAAuC,KAAKK,SAAL,CAAeE,KAAf,IAAwB,IAAIJ,SAAJ,EAA/D,GAAiF,KAAKE,SAAL,CAAeE,KAAf,IAAwB,IAAIV,GAAJ,EAAzG;AACA,WAAO,KAAKQ,SAAZ;AACH;;AAEDM,EAAAA,MAAM,CAACC,IAAD,EAAML,KAAN,EAAa;AACf,SAAKF,SAAL,CAAeE,KAAf,EAAsBN,SAAtB,GAAkCW,IAAlC;AACA,WAAO,KAAKP,SAAZ;AACH;;AAlBW;;AAqBhB,SAASQ,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAEzB,QAAMC,aAAa,GAAG,IAAIX,SAAJ,EAAtB;AAEA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkB1B,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAAC2B,WAAD,EAAcC,cAAd,IAAgC5B,QAAQ,CAAC,EAAD,CAA9C;;AAEA,WAAS6B,UAAT,CAAoBC,KAApB,EAA2B;AACvBA,IAAAA,KAAK,CAACC,cAAN;AACAL,IAAAA,OAAO,CAACI,KAAD,CAAP;AACH;;AAED,QAAM,CAAChB,SAAD,EAAYkB,YAAZ,IAA4BhC,QAAQ,CAACwB,aAAa,CAACV,SAAf,CAA1C;;AAGA,WAASmB,WAAT,GAAuB;AACnBD,IAAAA,YAAY,CAAC,CAAC,GAAGlB,SAAJ,EAAe,IAAIF,SAAJ,EAAf,CAAD,CAAZ;AACH;;AAED,WAASsB,cAAT,CAAwBlB,KAAxB,EAA+B;AAC3B,UAAMmB,YAAY,GAAGrB,SAAS,CAACsB,MAAV,CAAiBC,QAAQ,IAAE;AAC5CnB,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAiCL,SAAS,CAACwB,OAAV,CAAkBD,QAAlB,CAA7C;AACAnB,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAWH,KAAvB;AACA,aAAOF,SAAS,CAACwB,OAAV,CAAkBD,QAAlB,MAAgCrB,KAAvC;AACH,KAJoB,CAArB;AAKAE,IAAAA,OAAO,CAACC,GAAR,CAAYgB,YAAZ;AACAH,IAAAA,YAAY,CAAC,CAAC,GAAGG,YAAJ,CAAD,CAAZ;AACH;;AAED,sBAAQ;AAAA,4BACA;AAAM,MAAA,SAAS,EAAE,iBAAjB;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,OAAO,EAAEF,WAAf;AAA4B,QAAA,KAAK,EAAE,SAAnC;AAA8C,QAAA,WAAW,EAAE,GAA3D;AAAgE,QAAA,IAAI,EAAE;AAAtE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA,eAIA;AAAK,MAAA,SAAS,EAAE,aAAhB;AAAA,8BACI,QAAC,QAAD;AAAU,QAAA,YAAY,EAAER,IAAxB;AAA8B,QAAA,WAAW,EAAE,WAA3C;AAAwD,QAAA,MAAM,EAAEI,UAAhE;AAA4E,QAAA,SAAS,EAAE;AAAvF;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAU,QAAA,YAAY,EAAEF,WAAxB;AAAqC,QAAA,WAAW,EAAE,kBAAlD;AAAsE,QAAA,SAAS,EAAE;AAAjF;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKb,SAAS,CAACyB,MAAV,GAAmB,CAAnB,IAAwBzB,SAAS,CAAC0B,GAAV,CAAeH,QAAD,iBACnC,QAAC,QAAD;AAAW,QAAA,QAAQ,EAAEH,cAArB;AAAqC,QAAA,EAAE,EAAEpB,SAAS,CAACwB,OAAV,CAAkBD,QAAlB,CAAzC;AAAwF,QAAA,KAAK,EAAEA,QAAQ,CAAC3B,SAAxG;AAAmH,QAAA,IAAI,EAAE2B,QAAQ,CAAC5B,IAAlI;AAAwI,QAAA,MAAM,EAAEe,aAAa,CAACJ,MAA9J;AAAsK,QAAA,MAAM,EAAEI,aAAa,CAACT;AAA5L,SAA2EsB,QAAQ,CAAC7B,EAApF;AAAA;AAAA;AAAA;AAAA,cADqB,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAWH;;GAzCQc,Y;;KAAAA,Y;AA2CT,eAAeA,YAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {Plus} from 'lucide-react'\r\nimport './QuestionsTab.css'\r\nimport {EditText} from 'react-edit-text';\r\nimport 'react-edit-text/dist/index.css';\r\nimport Question from \"./Question/Question\";\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nclass MCQ {\r\n    constructor() {\r\n        this.id = uuid();\r\n        this.type = \"MCQ\"\r\n        this.statement = \"Untitled Question\"\r\n        this.options = [\"Option 1\"]\r\n    }\r\n}\r\n\r\n\r\nclass TextBased {\r\n    constructor() {\r\n        this.id = uuid()\r\n        this.type = \"TextBased\"\r\n        this.statement = \"Untitled Question \"\r\n    }\r\n}\r\n\r\nclass Questions {\r\n    constructor() {\r\n        this.questions = []\r\n        this.questions[0] = new TextBased()\r\n    }\r\n\r\n    switch(index) {\r\n        if(index === undefined) {return}\r\n        console.log(\"index : \"+index);\r\n        console.log(\"this.questions[index] : \"+this.questions[index]);\r\n        console.log(\"this.questions[index].type : \"+this.questions[index].type);\r\n        this.questions[index].type === \"MCQ\" ? this.questions[index] = new TextBased() : this.questions[index] = new MCQ()\r\n        return this.questions\r\n    }\r\n\r\n    rename(text,index) {\r\n        this.questions[index].statement = text\r\n        return this.questions\r\n    }\r\n\r\n}\r\nfunction QuestionsTab(props) {\r\n\r\n    const questionsList = new Questions()\r\n\r\n    const [name, setName] = useState(\"\");\r\n\r\n    const [description, setDescription] = useState(\"\");\r\n\r\n    function changeName(value) {\r\n        value.preventDefault();\r\n        setName(value)\r\n    }\r\n\r\n    const [questions, setQuestions] = useState(questionsList.questions);\r\n\r\n\r\n    function addQuestion() {\r\n        setQuestions([...questions, new TextBased()])\r\n    }\r\n\r\n    function deleteQuestion(index) {\r\n        const newQuestions = questions.filter(question=>{\r\n            console.log(\"questions.indexOf(question) : \"+questions.indexOf(question));\r\n            console.log(\"index : \"+index);\r\n            return questions.indexOf(question) !== index\r\n        })\r\n        console.log(newQuestions);\r\n        setQuestions([...newQuestions])\r\n    }\r\n\r\n    return (<div>\r\n            <span className={\"floating-action\"}>\r\n                <Plus onClick={addQuestion} color={\"#085B91\"} strokeWidth={\"4\"} size={\"24\"}/>\r\n            </span>\r\n            <div className={\"poll-header\"}>\r\n                <EditText defaultValue={name} placeholder={\"Poll Name\"} onSave={changeName} className={\"poll-name\"}/>\r\n                <EditText defaultValue={description} placeholder={\"Poll Description\"} className={\"poll-desc\"}/>\r\n                {questions.length > 0 && questions.map((question) => (\r\n                    <Question  onDelete={deleteQuestion} id={questions.indexOf(question)} key={question.id} title={question.statement} type={question.type} rename={questionsList.rename} switch={questionsList.switch}/>))}\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nexport default QuestionsTab;"]},"metadata":{},"sourceType":"module"}