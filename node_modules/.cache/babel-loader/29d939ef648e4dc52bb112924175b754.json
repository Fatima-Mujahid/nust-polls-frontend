{"ast":null,"code":"var _jsxFileName = \"C:\\\\nust-polls\\\\nust-polls-frontend\\\\src\\\\Components\\\\Existing\\\\NewPoll\\\\CenteredTabs\\\\QuestionsTab\\\\Question\\\\Question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { EditText } from \"react-edit-text\";\nimport 'react-edit-text/dist/index.css';\nimport './Question.css';\nimport AnimatedDropdown from \"./Animated DropDown/AnimatedDropDown\";\nimport 'react-dropdown/style.css';\nimport ShortText from \"./ShortText/ShortText\";\nimport MultipleChoice from \"./MultipleChoice/MultipleChoice\";\nimport { fadeIn } from \"react-animations\";\nimport styled, { keyframes } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FadeIn = styled.div`\n      animation: 0.5s ${keyframes(fadeIn)};\n    `;\n_c = FadeIn;\n\nfunction Question(props) {\n  _s();\n\n  const [name, setName] = useState(props.title);\n\n  function changeName(value) {\n    value.preventDefault();\n    setName(value);\n  }\n\n  const [selected, setSelected] = useState(props.type);\n\n  const HandleSelection = val => {\n    setSelected(val);\n  };\n\n  const url = \"\"; // useEffect(() => {\n  //     return () => {\n  //         fetch(url, {\n  //             method: \"POST\", headers: {\n  //                 'Content-Type': 'application/json', boyd: JSON.stringify({\n  //                     name: name.value,\n  //                 })\n  //             }\n  //         })\n  //     };\n  // }, [name]);\n\n  useEffect(() => {\n    console.log(selected);\n  }, [selected]);\n  useEffect(() => {\n    console.log(selected);\n  }, [selected]);\n\n  function deleteHandler() {\n    console.log(props.id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-heading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(EditText, {\n          defaultValue: name,\n          onSave: changeName,\n          className: \"question-title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-questions\",\n        children: /*#__PURE__*/_jsxDEV(AnimatedDropdown, {\n          switch: props.switch,\n          selected: selected,\n          onSelection: HandleSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FadeIn, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-details\",\n        children: selected === \"TextBased\" ? /*#__PURE__*/_jsxDEV(ShortText, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 45\n        }, this) : /*#__PURE__*/_jsxDEV(MultipleChoice, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deleteHandler(),\n      type: \"button\",\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Question, \"5h4S363tcZ1AYn+C2H+JGi7oDbA=\");\n\n_c2 = Question;\nexport default Question;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FadeIn\");\n$RefreshReg$(_c2, \"Question\");","map":{"version":3,"sources":["C:/nust-polls/nust-polls-frontend/src/Components/Existing/NewPoll/CenteredTabs/QuestionsTab/Question/Question.js"],"names":["React","useEffect","useState","EditText","AnimatedDropdown","ShortText","MultipleChoice","fadeIn","styled","keyframes","FadeIn","div","Question","props","name","setName","title","changeName","value","preventDefault","selected","setSelected","type","HandleSelection","val","url","console","log","deleteHandler","id","switch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,OAAO,gCAAP;AACA,OAAO,gBAAP;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,OAAO,0BAAP;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAAQC,MAAR,QAAqB,kBAArB;AACA,OAAOC,MAAP,IAAgBC,SAAhB,QAAgC,mBAAhC;;AAEA,MAAMC,MAAM,GAAGF,MAAM,CAACG,GAAI;AAC1B,wBAAwBF,SAAS,CAACF,MAAD,CAAS;AAC1C,KAFA;KAAMG,M;;AAIN,SAASE,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAErB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAACW,KAAK,CAACG,KAAP,CAAhC;;AAEA,WAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvBA,IAAAA,KAAK,CAACC,cAAN;AACAJ,IAAAA,OAAO,CAACG,KAAD,CAAP;AACH;;AAED,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAACW,KAAK,CAACS,IAAP,CAAxC;;AAEA,QAAMC,eAAe,GAAIC,GAAD,IAAS;AAC7BH,IAAAA,WAAW,CAACG,GAAD,CAAX;AACH,GAFD;;AAIA,QAAMC,GAAG,GAAG,EAAZ,CAfqB,CAiBrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGAxB,EAAAA,SAAS,CAAC,MAAM;AACZyB,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACH,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIAnB,EAAAA,SAAS,CAAC,MAAM;AACZyB,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACH,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;;AAKA,WAASQ,aAAT,GAAyB;AACrBF,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACgB,EAAlB;AACH;;AAED,sBAAQ;AAAK,IAAA,SAAS,EAAE,eAAhB;AAAA,4BACJ;AAAK,MAAA,SAAS,EAAE,kBAAhB;AAAA,8BACI;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,YAAY,EAAEf,IAAxB;AAA8B,UAAA,MAAM,EAAEG,UAAtC;AAAkD,UAAA,SAAS,EAAE;AAA7D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAE,oBAAhB;AAAA,+BACI,QAAC,gBAAD;AAAmB,UAAA,MAAM,EAAEJ,KAAK,CAACiB,MAAjC;AAAyC,UAAA,QAAQ,EAAEV,QAAnD;AAA6D,UAAA,WAAW,EAAEG;AAA1E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,eASJ,QAAC,MAAD;AAAA,6BACI;AAAK,QAAA,SAAS,EAAE,kBAAhB;AAAA,kBACKH,QAAQ,KAAK,WAAb,gBAA2B,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAA3B,gBAA0C,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAD/C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATI,eAcJ;AAAQ,MAAA,OAAO,EAAE,MAAIQ,aAAa,EAAlC;AAAsC,MAAA,IAAI,EAAE,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdI;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAgBH;;GA3DQhB,Q;;MAAAA,Q;AA6DT,eAAeA,QAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {EditText} from \"react-edit-text\";\r\nimport 'react-edit-text/dist/index.css';\r\nimport './Question.css'\r\nimport AnimatedDropdown from \"./Animated DropDown/AnimatedDropDown\";\r\nimport 'react-dropdown/style.css';\r\nimport ShortText from \"./ShortText/ShortText\";\r\nimport MultipleChoice from \"./MultipleChoice/MultipleChoice\";\r\nimport {fadeIn} from \"react-animations\";\r\nimport styled, {keyframes} from \"styled-components\";\r\n\r\nconst FadeIn = styled.div`\r\n      animation: 0.5s ${keyframes(fadeIn)};\r\n    `;\r\n\r\nfunction Question(props) {\r\n\r\n    const [name, setName] = useState(props.title);\r\n\r\n    function changeName(value) {\r\n        value.preventDefault();\r\n        setName(value)\r\n    }\r\n\r\n    const [selected, setSelected] = useState(props.type);\r\n\r\n    const HandleSelection = (val) => {\r\n        setSelected(val)\r\n    }\r\n\r\n    const url = \"\"\r\n\r\n    // useEffect(() => {\r\n    //     return () => {\r\n    //         fetch(url, {\r\n    //             method: \"POST\", headers: {\r\n    //                 'Content-Type': 'application/json', boyd: JSON.stringify({\r\n    //                     name: name.value,\r\n    //                 })\r\n    //             }\r\n    //         })\r\n    //     };\r\n    // }, [name]);\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(selected)\r\n    }, [selected])\r\n\r\n    useEffect(() => {\r\n        console.log(selected)\r\n    }, [selected])\r\n\r\n\r\n    function deleteHandler() {\r\n        console.log(props.id)\r\n    }\r\n\r\n    return (<div className={\"question-body\"}>\r\n        <div className={\"question-heading\"}>\r\n            <div>\r\n                <EditText defaultValue={name} onSave={changeName} className={\"question-title\"}/>\r\n            </div>\r\n            <div className={\"dropdown-questions\"}>\r\n                <AnimatedDropdown  switch={props.switch} selected={selected} onSelection={HandleSelection}/>\r\n            </div>\r\n        </div>\r\n        <FadeIn>\r\n            <div className={\"question-details\"}>\r\n                {selected === \"TextBased\" ? <ShortText/> : <MultipleChoice/>}\r\n            </div>\r\n        </FadeIn>\r\n        <button onClick={()=>deleteHandler()} type={\"button\"} >Delete</button>\r\n    </div>);\r\n}\r\n\r\nexport default Question;"]},"metadata":{},"sourceType":"module"}