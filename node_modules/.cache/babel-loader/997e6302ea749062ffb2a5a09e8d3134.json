{"ast":null,"code":"var _jsxFileName = \"C:\\\\nust-polls\\\\nust-polls-frontend\\\\src\\\\Components\\\\Existing\\\\NewPoll\\\\CenteredTabs\\\\QuestionsTab\\\\QuestionsTab.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Plus } from 'lucide-react';\nimport './QuestionsTab.css';\nimport { EditText } from 'react-edit-text';\nimport 'react-edit-text/dist/index.css';\nimport Question from \"./Question/Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MCQ {\n  constructor(index) {\n    this.statement = \"Untitled Question \" + index;\n    this.options = [\"Option 1\"];\n  }\n\n}\n\nclass TextBased {\n  constructor(index) {\n    this.statement = \"Untitled Question \" + index;\n  }\n\n}\n\nclass Questions {\n  constructor() {\n    this.questions = [];\n  }\n\n  add(type) {\n    console.log(this.questions.length);\n\n    if (type === \"mcq\") {\n      this.questions.push(new MCQ(this.questions.length));\n    }\n\n    if (type === \"text-based\") {\n      this.questions.push(new TextBased(this.questions.length));\n    }\n  }\n\n}\n\nfunction QuestionsTab(props) {\n  _s();\n\n  const questionsList = new Questions();\n  questionsList.add(\"text-based\");\n  questionsList.add(\"text-based\");\n  const [name, setName] = useState(\"Untitled Poll\");\n\n  function changeName(value) {\n    value.preventDefault();\n    setName(value);\n  }\n\n  const [questions, setQuestions] = useState([questionsList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"floating-action\",\n      children: /*#__PURE__*/_jsxDEV(Plus, {\n        color: \"#085B91\",\n        strokeWidth: \"4\",\n        size: \"24\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-header\",\n      children: [/*#__PURE__*/_jsxDEV(EditText, {\n        defaultValue: name,\n        onSave: changeName,\n        className: \"poll-name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditText, {\n        defaultValue: \"hello\",\n        className: \"poll-desc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), questionsList.questions.length > 0 && questionsList.questions.map(poll => /*#__PURE__*/_jsxDEV(Question, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QuestionsTab, \"kWEMblMVKQdUAhfw6bC4gaC3Ykg=\");\n\n_c = QuestionsTab;\nexport default QuestionsTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionsTab\");","map":{"version":3,"sources":["C:/nust-polls/nust-polls-frontend/src/Components/Existing/NewPoll/CenteredTabs/QuestionsTab/QuestionsTab.js"],"names":["React","useState","Plus","EditText","Question","MCQ","constructor","index","statement","options","TextBased","Questions","questions","add","type","console","log","length","push","QuestionsTab","props","questionsList","name","setName","changeName","value","preventDefault","setQuestions","map","poll"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,IAAR,QAAmB,cAAnB;AACA,OAAO,oBAAP;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,OAAO,gCAAP;AACA,OAAOC,QAAP,MAAqB,qBAArB;;;AAEA,MAAMC,GAAN,CAAU;AACNC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,SAAKC,SAAL,GAAiB,uBAAuBD,KAAxC;AACA,SAAKE,OAAL,GAAe,CAAC,UAAD,CAAf;AACH;;AAJK;;AAQV,MAAMC,SAAN,CAAgB;AACZJ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,SAAKC,SAAL,GAAiB,uBAAuBD,KAAxC;AACH;;AAHW;;AAMhB,MAAMI,SAAN,CAAgB;AACZL,EAAAA,WAAW,GAAG;AACV,SAAKM,SAAL,GAAiB,EAAjB;AACH;;AAEDC,EAAAA,GAAG,CAACC,IAAD,EAAO;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,SAAL,CAAeK,MAA3B;;AACA,QAAIH,IAAI,KAAK,KAAb,EAAoB;AAChB,WAAKF,SAAL,CAAeM,IAAf,CAAoB,IAAIb,GAAJ,CAAQ,KAAKO,SAAL,CAAeK,MAAvB,CAApB;AACH;;AACD,QAAIH,IAAI,KAAK,YAAb,EAA2B;AACvB,WAAKF,SAAL,CAAeM,IAAf,CAAoB,IAAIR,SAAJ,CAAc,KAAKE,SAAL,CAAeK,MAA7B,CAApB;AACH;AACJ;;AAbW;;AAgBhB,SAASE,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAEzB,QAAMC,aAAa,GAAG,IAAIV,SAAJ,EAAtB;AACAU,EAAAA,aAAa,CAACR,GAAd,CAAkB,YAAlB;AACAQ,EAAAA,aAAa,CAACR,GAAd,CAAkB,YAAlB;AAEA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,eAAD,CAAhC;;AAEA,WAASuB,UAAT,CAAoBC,KAApB,EAA2B;AACvBA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,OAAO,CAACE,KAAD,CAAP;AACH;;AAED,QAAM,CAACb,SAAD,EAAYe,YAAZ,IAA4B1B,QAAQ,CAAC,CAACoB,aAAD,CAAD,CAA1C;AAEA,sBACI;AAAA,4BACI;AAAM,MAAA,SAAS,EAAE,iBAAjB;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE,SAAb;AAAwB,QAAA,WAAW,EAAE,GAArC;AAA0C,QAAA,IAAI,EAAE;AAAhD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAE,aAAhB;AAAA,8BACI,QAAC,QAAD;AAAU,QAAA,YAAY,EAAEC,IAAxB;AAA8B,QAAA,MAAM,EAAEE,UAAtC;AAAkD,QAAA,SAAS,EAAE;AAA7D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAU,QAAA,YAAY,EAAE,OAAxB;AAAiC,QAAA,SAAS,EAAE;AAA5C;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKH,aAAa,CAACT,SAAd,CAAwBK,MAAxB,GAAiC,CAAjC,IAAsCI,aAAa,CAACT,SAAd,CAAwBgB,GAAxB,CAA6BC,IAAD,iBAC/D,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADmC,CAH3C;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA9BQV,Y;;KAAAA,Y;AAgCT,eAAeA,YAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {Plus} from 'lucide-react'\r\nimport './QuestionsTab.css'\r\nimport {EditText} from 'react-edit-text';\r\nimport 'react-edit-text/dist/index.css';\r\nimport Question from \"./Question/Question\";\r\n\r\nclass MCQ {\r\n    constructor(index) {\r\n        this.statement = \"Untitled Question \" + index\r\n        this.options = [\"Option 1\"]\r\n    }\r\n}\r\n\r\n\r\nclass TextBased {\r\n    constructor(index) {\r\n        this.statement = \"Untitled Question \" + index\r\n    }\r\n}\r\n\r\nclass Questions {\r\n    constructor() {\r\n        this.questions = []\r\n    }\r\n\r\n    add(type) {\r\n        console.log(this.questions.length);\r\n        if (type === \"mcq\") {\r\n            this.questions.push(new MCQ(this.questions.length))\r\n        }\r\n        if (type === \"text-based\") {\r\n            this.questions.push(new TextBased(this.questions.length))\r\n        }\r\n    }\r\n}\r\n\r\nfunction QuestionsTab(props) {\r\n\r\n    const questionsList = new Questions()\r\n    questionsList.add(\"text-based\")\r\n    questionsList.add(\"text-based\")\r\n\r\n    const [name, setName] = useState(\"Untitled Poll\");\r\n\r\n    function changeName(value) {\r\n        value.preventDefault();\r\n        setName(value)\r\n    }\r\n\r\n    const [questions, setQuestions] = useState([questionsList]);\r\n\r\n    return (\r\n        <div>\r\n            <span className={\"floating-action\"}>\r\n                <Plus color={\"#085B91\"} strokeWidth={\"4\"} size={\"24\"}/>\r\n            </span>\r\n            <div className={\"poll-header\"}>\r\n                <EditText defaultValue={name} onSave={changeName} className={\"poll-name\"}/>\r\n                <EditText defaultValue={\"hello\"} className={\"poll-desc\"}/>\r\n                {questionsList.questions.length > 0 && questionsList.questions.map((poll) => (\r\n                    <Question/>\r\n                ))}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuestionsTab;"]},"metadata":{},"sourceType":"module"}