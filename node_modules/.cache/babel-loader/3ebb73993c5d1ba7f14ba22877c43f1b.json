{"ast":null,"code":"var _jsxFileName = \"C:\\\\nust-polls\\\\nust-polls-frontend\\\\src\\\\Components\\\\Existing\\\\NewPoll\\\\CenteredTabs\\\\QuestionsTab\\\\Question\\\\Question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { EditText } from \"react-edit-text\";\nimport 'react-edit-text/dist/index.css';\nimport './Question.css';\nimport AnimatedDropdown from \"./Animated DropDown/AnimatedDropDown\";\nimport 'react-dropdown/style.css';\nimport ShortText from \"./ShortText/ShortText\";\nimport MultipleChoice from \"./MultipleChoice/MultipleChoice\";\nimport { fadeIn } from \"react-animations\";\nimport styled, { keyframes } from \"styled-components\";\nimport { Trash } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FadeIn = styled.div`\n      animation: 0.5s ${keyframes(fadeIn)};\n    `;\n_c = FadeIn;\n\nfunction Question(props) {\n  _s();\n\n  const [name, setName] = useState(\"\");\n\n  function changeName(value) {\n    console.log(value);\n    setName(value.value);\n    props.rename(value.value, props.question.id);\n  }\n\n  const [selected, setSelected] = useState(props.question.type);\n\n  const HandleSelection = val => {\n    setSelected(val);\n  };\n\n  const [question, setQuestion] = useState(props.question);\n  const url = \"\"; // useEffect(() => {\n  //     return () => {\n  //         fetch(url, {\n  //             method: \"POST\", headers: {\n  //                 'Content-Type': 'application/json', boyd: JSON.stringify({\n  //                     name: name.value,\n  //                 })\n  //             }\n  //         })\n  //     };\n  // }, [name]);\n\n  function deleteHandler() {\n    props.onDelete(props.question.id);\n  }\n\n  function onSwitch(text, index, type) {\n    console.log(\"type\");\n    console.log(type);\n    setQuestion(props.switch(text, index, type));\n    return props.switch(text, index, type);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-heading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(EditText, {\n          defaultValue: name,\n          placeholder: props.question.statement,\n          onSave: changeName,\n          className: \"question-title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-questions\",\n        children: /*#__PURE__*/_jsxDEV(AnimatedDropdown, {\n          id: props.question.id,\n          switch: onSwitch,\n          text: props.question.statement,\n          selected: selected,\n          onSelection: HandleSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FadeIn, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-details\",\n        children: selected === \"TextBased\" ? /*#__PURE__*/_jsxDEV(ShortText, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 45\n        }, this) : /*#__PURE__*/_jsxDEV(MultipleChoice, {\n          question: props.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Trash, {\n        className: \"question-delete-icon\",\n        strokeWidth: 2,\n        onClick: () => deleteHandler(),\n        size: 25\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Question, \"YW2sGHS3RqV5XlrD3vRb/Ql1cQM=\");\n\n_c2 = Question;\nexport default Question;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FadeIn\");\n$RefreshReg$(_c2, \"Question\");","map":{"version":3,"sources":["C:/nust-polls/nust-polls-frontend/src/Components/Existing/NewPoll/CenteredTabs/QuestionsTab/Question/Question.js"],"names":["React","useEffect","useState","EditText","AnimatedDropdown","ShortText","MultipleChoice","fadeIn","styled","keyframes","Trash","FadeIn","div","Question","props","name","setName","changeName","value","console","log","rename","question","id","selected","setSelected","type","HandleSelection","val","setQuestion","url","deleteHandler","onDelete","onSwitch","text","index","switch","statement"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {EditText} from \"react-edit-text\";\r\nimport 'react-edit-text/dist/index.css';\r\nimport './Question.css'\r\nimport AnimatedDropdown from \"./Animated DropDown/AnimatedDropDown\";\r\nimport 'react-dropdown/style.css';\r\nimport ShortText from \"./ShortText/ShortText\";\r\nimport MultipleChoice from \"./MultipleChoice/MultipleChoice\";\r\nimport {fadeIn} from \"react-animations\";\r\nimport styled, {keyframes} from \"styled-components\";\r\nimport {Trash} from 'lucide-react'\r\n\r\nconst FadeIn = styled.div`\r\n      animation: 0.5s ${keyframes(fadeIn)};\r\n    `;\r\n\r\nfunction Question(props) {\r\n\r\n    const [name, setName] = useState(\"\");\r\n\r\n    function changeName(value) {\r\n        console.log(value);\r\n        setName(value.value)\r\n        props.rename(value.value,props.question.id)\r\n    }\r\n\r\n    const [selected, setSelected] = useState(props.question.type);\r\n\r\n    const HandleSelection = (val) => {\r\n        setSelected(val)\r\n    }\r\n\r\n    const [question, setQuestion] = useState(props.question);\r\n\r\n    const url = \"\"\r\n\r\n    // useEffect(() => {\r\n    //     return () => {\r\n    //         fetch(url, {\r\n    //             method: \"POST\", headers: {\r\n    //                 'Content-Type': 'application/json', boyd: JSON.stringify({\r\n    //                     name: name.value,\r\n    //                 })\r\n    //             }\r\n    //         })\r\n    //     };\r\n    // }, [name]);\r\n\r\n\r\n    function deleteHandler() {\r\n        props.onDelete(props.question.id);\r\n    }\r\n\r\n    function onSwitch(text,index,type){\r\n        console.log(\"type\");\r\n        console.log(type);\r\n        setQuestion(props.switch(text,index,type))\r\n        return props.switch(text,index,type)\r\n    }\r\n\r\n\r\n    return (<div className={\"question-body\"}>\r\n        <div className={\"question-heading\"}>\r\n            <div>\r\n                <EditText defaultValue={name} placeholder={props.question.statement} onSave={changeName} className={\"question-title\"}/>\r\n            </div>\r\n            <div className={\"dropdown-questions\"}>\r\n                <AnimatedDropdown id={props.question.id} switch={onSwitch} text={props.question.statement} selected={selected} onSelection={HandleSelection}/>\r\n            </div>\r\n        </div>\r\n        <FadeIn>\r\n            <div className={\"question-details\"}>\r\n                {selected === \"TextBased\" ? <ShortText/> : <MultipleChoice question={props.question} />}\r\n            </div>\r\n        </FadeIn>\r\n        <div >\r\n            <Trash className={\"question-delete-icon\"} strokeWidth={2} onClick={()=>deleteHandler()} size={25}  />\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default Question;"]},"metadata":{},"sourceType":"module"}