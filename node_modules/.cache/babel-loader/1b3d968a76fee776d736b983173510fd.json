{"ast":null,"code":"var _jsxFileName = \"C:\\\\nust-polls\\\\nust-polls-frontend\\\\src\\\\Components\\\\Existing\\\\NewPoll\\\\CenteredTabs\\\\QuestionsTab\\\\Question\\\\Animated DropDown\\\\AnimatedDropDown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport UnopDropdown from \"unop-react-dropdown\";\nimport \"./AnimatedDropDown.css\";\nimport { AlignLeft, ChevronRight, Circle } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AnimatedDropDown(props) {\n  _s();\n\n  const [open, setOpen] = useState(false);\n\n  const handler = () => {\n    setOpen(!open);\n  };\n\n  const [options, setOptions] = useState([{\n    type: \"TextBased\",\n    text: \"Short Text\"\n  }, {\n    type: \"MCQ\",\n    name: \"Multiple Choice\"\n  }]);\n  const [selectedValue, setSelectedValue] = useState(props.selected);\n  const [focused, setFocused] = useState(false);\n\n  const onFocus = () => setFocused(true);\n\n  const onBlur = () => setFocused(false);\n\n  function select(val) {\n    setSelectedValue(val);\n    props.onSelection(val);\n  }\n\n  function isSelected(val) {\n    return val === selectedValue;\n  } // Change props and see effect\n\n\n  return /*#__PURE__*/_jsxDEV(UnopDropdown, {\n    onAppear: handler,\n    onDisappearStart: handler,\n    trigger: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"AnimatedDropdownButton\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [selectedValue === options[0].type ? /*#__PURE__*/_jsxDEV(AlignLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 58\n        }, this) : /*#__PURE__*/_jsxDEV(Circle, {\n          size: 15,\n          fill: \"#085B91\",\n          style: {\n            border: \"2px solid white\",\n            outline: \"2px solid #085B91\",\n            borderRadius: \"15px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), options[0].text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ChevronRight, {\n        size: 15,\n        style: {\n          transform: 'rotate(90deg)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 22\n    }, this),\n    closeOnClickOut: handler,\n    delay: 300,\n    align: \"LEFT\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `AnimatedDropdownStyles openAnimation ${!open ? \" closeAnimation\" : \"\" || focused ? \" closeAnimation\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: isSelected(options[0]) ? \"selected\" : \"\",\n        onClick: () => select(options[0]),\n        children: [options[0], \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isSelected(options[1]) ? \"selected\" : \"\",\n        onClick: () => select(options[1]),\n        children: options[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AnimatedDropDown, \"+U/n9G2IfPgZxMHXTCKm+4CDGjE=\");\n\n_c = AnimatedDropDown;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimatedDropDown\");","map":{"version":3,"sources":["C:/nust-polls/nust-polls-frontend/src/Components/Existing/NewPoll/CenteredTabs/QuestionsTab/Question/Animated DropDown/AnimatedDropDown.js"],"names":["React","useState","UnopDropdown","AlignLeft","ChevronRight","Circle","AnimatedDropDown","props","open","setOpen","handler","options","setOptions","type","text","name","selectedValue","setSelectedValue","selected","focused","setFocused","onFocus","onBlur","select","val","onSelection","isSelected","border","outline","borderRadius","transform"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport UnopDropdown from \"unop-react-dropdown\";\r\nimport \"./AnimatedDropDown.css\"\r\nimport {AlignLeft, ChevronRight, Circle} from 'lucide-react'\r\n\r\n\r\nexport default function AnimatedDropDown(props) {\r\n    const [open, setOpen] = useState(false);\r\n    const handler = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    const [options, setOptions] = useState([\r\n        {\r\n            type: \"TextBased\",\r\n            text: \"Short Text\",\r\n        },\r\n        {\r\n            type: \"MCQ\",\r\n            name: \"Multiple Choice\"\r\n        }\r\n    ],);\r\n\r\n    const [selectedValue, setSelectedValue] = useState(\r\n        props.selected\r\n    );\r\n\r\n    const [focused, setFocused] = useState(false)\r\n    const onFocus = () => setFocused(true)\r\n    const onBlur = () => setFocused(false)\r\n\r\n    function select(val) {\r\n        setSelectedValue(val,)\r\n        props.onSelection(val);\r\n    }\r\n\r\n    function isSelected(val) {\r\n        return val === selectedValue\r\n    }\r\n\r\n\r\n    // Change props and see effect\r\n    return (\r\n        <UnopDropdown\r\n            onAppear={handler}\r\n            onDisappearStart={handler}\r\n            trigger={<button className=\"AnimatedDropdownButton\">\r\n                <div>\r\n                    {selectedValue === options[0].type ? <AlignLeft/> :\r\n                        <Circle size={15} fill={\"#085B91\"} style={{\r\n                            border: \"2px solid white\",\r\n                            outline: \"2px solid #085B91\",\r\n                            borderRadius: \"15px\"\r\n                        }}/>}\r\n                    {options[0].text}\r\n                </div>\r\n                <ChevronRight size={15} style={{\r\n                    transform: 'rotate(90deg)',\r\n                }}/></button>}\r\n            closeOnClickOut={handler}\r\n            delay={300}\r\n            align=\"LEFT\"\r\n        >\r\n            <div\r\n                className={`AnimatedDropdownStyles openAnimation ${\r\n                    !open ? \" closeAnimation\" : \"\" || focused ? \" closeAnimation\" : \"\"\r\n                }`}\r\n            >\r\n                <div className={isSelected(options[0]) ? \"selected\" : \"\"}\r\n                     onClick={() => select(options[0])}>{options[0]} </div>\r\n                <div className={isSelected(options[1]) ? \"selected\" : \"\"}\r\n                     onClick={() => select(options[1])}>{options[1]}</div>\r\n            </div>\r\n        </UnopDropdown>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}