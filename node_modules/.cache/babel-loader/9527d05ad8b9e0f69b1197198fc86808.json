{"ast":null,"code":"var _jsxFileName = \"C:\\\\nust-polls\\\\nust-polls-frontend\\\\src\\\\Components\\\\Existing\\\\NewPoll\\\\CenteredTabs\\\\QuestionsTab\\\\QuestionsTab.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Plus } from 'lucide-react';\nimport './QuestionsTab.css';\nimport { EditText } from 'react-edit-text';\nimport 'react-edit-text/dist/index.css';\nimport Question from \"./Question/Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MCQ {\n  constructor(index) {\n    this.type = \"MCQ\";\n    this.statement = \"Untitled Question \" + index;\n    this.options = [\"Option 1\"];\n  }\n\n}\n\nclass TextBased {\n  constructor(index) {\n    this.type = \"TextBased\";\n    this.statement = \"Untitled Question \" + index;\n  }\n\n}\n\nclass Questions {\n  constructor() {\n    this.questions = [];\n  }\n\n  add() {\n    this.questions.push(new TextBased(this.questions.length + 1));\n  }\n\n  switch(index) {\n    this.questions[index].type === \"MCQ\" ? this.questions[index] = new TextBased(index) : this.questions[index] = new MCQ(index);\n  }\n\n}\n\nfunction QuestionsTab(props) {\n  _s();\n\n  const questionsList = new Questions();\n  questionsList.add();\n  questionsList.add();\n  const [name, setName] = useState(\"Untitled Poll\");\n\n  function changeName(value) {\n    value.preventDefault();\n    setName(value);\n  }\n\n  const [questions, setQuestions] = useState([questionsList]);\n\n  function addQuestion() {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"floating-action\",\n      children: /*#__PURE__*/_jsxDEV(Plus, {\n        onClick: addQuestion,\n        color: \"#085B91\",\n        strokeWidth: \"4\",\n        size: \"24\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-header\",\n      children: [/*#__PURE__*/_jsxDEV(EditText, {\n        defaultValue: name,\n        onSave: changeName,\n        className: \"poll-name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditText, {\n        defaultValue: \"hello\",\n        className: \"poll-desc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), questions.questions.length > 0 && questions.questions.map(question => /*#__PURE__*/_jsxDEV(Question, {\n        title: question.statement,\n        type: question.type,\n        switch: questionsList.switch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QuestionsTab, \"kWEMblMVKQdUAhfw6bC4gaC3Ykg=\");\n\n_c = QuestionsTab;\nexport default QuestionsTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionsTab\");","map":{"version":3,"sources":["C:/nust-polls/nust-polls-frontend/src/Components/Existing/NewPoll/CenteredTabs/QuestionsTab/QuestionsTab.js"],"names":["React","useState","Plus","EditText","Question","MCQ","constructor","index","type","statement","options","TextBased","Questions","questions","add","push","length","switch","QuestionsTab","props","questionsList","name","setName","changeName","value","preventDefault","setQuestions","addQuestion","map","question"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {Plus} from 'lucide-react'\r\nimport './QuestionsTab.css'\r\nimport {EditText} from 'react-edit-text';\r\nimport 'react-edit-text/dist/index.css';\r\nimport Question from \"./Question/Question\";\r\n\r\nclass MCQ {\r\n    constructor(index) {\r\n        this.type=\"MCQ\"\r\n        this.statement = \"Untitled Question \" + index\r\n        this.options = [\"Option 1\"]\r\n    }\r\n}\r\n\r\n\r\nclass TextBased {\r\n    constructor(index) {\r\n        this.type=\"TextBased\"\r\n        this.statement = \"Untitled Question \" + index\r\n    }\r\n}\r\n\r\nclass Questions {\r\n    constructor() {\r\n        this.questions = []\r\n    }\r\n\r\n    add() {\r\n        this.questions.push(new TextBased(this.questions.length + 1))\r\n    }\r\n\r\n    switch(index) {\r\n        this.questions[index].type === \"MCQ\" ? this.questions[index] = new TextBased(index) : this.questions[index] = new MCQ(index);\r\n    }\r\n}\r\n\r\nfunction QuestionsTab(props) {\r\n\r\n    const questionsList = new Questions()\r\n\r\n    questionsList.add()\r\n    questionsList.add()\r\n\r\n    const [name, setName] = useState(\"Untitled Poll\");\r\n\r\n    function changeName(value) {\r\n        value.preventDefault();\r\n        setName(value)\r\n    }\r\n\r\n    const [questions, setQuestions] = useState([questionsList]);\r\n\r\n\r\n    function addQuestion() {\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <span className={\"floating-action\"}>\r\n                <Plus onClick={addQuestion}  color={\"#085B91\"} strokeWidth={\"4\"} size={\"24\"}/>\r\n            </span>\r\n            <div className={\"poll-header\"}>\r\n                <EditText defaultValue={name} onSave={changeName} className={\"poll-name\"}/>\r\n                <EditText defaultValue={\"hello\"} className={\"poll-desc\"}/>\r\n                {questions.questions.length > 0 && questions.questions.map((question) => (\r\n                    <Question title={question.statement} type={question.type} switch={questionsList.switch} />\r\n                ))}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuestionsTab;"]},"metadata":{},"sourceType":"module"}