{"ast":null,"code":"var _jsxFileName = \"C:\\\\nust-polls\\\\nust-polls-frontend\\\\src\\\\Components\\\\Existing\\\\NewPoll\\\\CenteredTabs\\\\QuestionsTab\\\\QuestionsTab.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Plus } from 'lucide-react';\nimport './QuestionsTab.css';\nimport { EditText } from 'react-edit-text';\nimport 'react-edit-text/dist/index.css';\nimport Question from \"./Question/Question\";\nimport { v4 as uuid } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MCQ {\n  constructor() {\n    let statement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Untitled Question\";\n    this.id = uuid();\n    this.type = \"MCQ\";\n    this.statement = statement;\n    this.options = [\"Option\"];\n  }\n\n}\n\nclass TextBased {\n  constructor() {\n    let statement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Untitled Question\";\n    this.id = uuid();\n    this.type = \"TextBased\";\n    this.statement = statement;\n  }\n\n}\n\nclass Questions {\n  constructor() {\n    this.questions = [];\n    this.questions[0] = new TextBased();\n  }\n\n}\n\nfunction QuestionsTab(props) {\n  _s();\n\n  const questionsList = new Questions();\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  function changeName(value) {\n    console.log(value);\n    setName(value.value);\n  }\n\n  const [questions, setQuestions] = useState(questionsList.questions);\n\n  function rename(text, index) {\n    questions[index].statement = text;\n    console.log(\"Renamed questions\");\n    console.log(questions);\n    return questions[index];\n  }\n\n  function switchHandler(text, index, type) {\n    if (index === undefined) {\n      return;\n    }\n\n    if (questions[index].type !== type) {\n      questions[index].type === \"MCQ\" ? questions[index] = new TextBased(text) : questions[index] = new MCQ(text);\n    }\n\n    console.log(questions);\n    return questions[index];\n  }\n\n  function addOption(index, option) {\n    if (questions[index].type === \"MCQ\") {\n      questions[index].options.push(option);\n    }\n\n    console.log(questions[index]);\n    return questions[index].option;\n  }\n\n  function addQuestion() {\n    setQuestions([...questions, new TextBased()]);\n  }\n\n  function deleteQuestion(index) {\n    const newQuestions = questions.filter(question => {\n      return questions.indexOf(question) !== index;\n    });\n    setQuestions([...newQuestions]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"floating-action\",\n      children: /*#__PURE__*/_jsxDEV(Plus, {\n        onClick: addQuestion,\n        color: \"#085B91\",\n        strokeWidth: \"4\",\n        size: \"24\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-header\",\n      children: [/*#__PURE__*/_jsxDEV(EditText, {\n        defaultValue: name,\n        placeholder: \"Poll Name\",\n        onSave: changeName,\n        className: \"poll-name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditText, {\n        defaultValue: description,\n        placeholder: \"Poll Description\",\n        className: \"poll-desc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), questions.length > 0 && questions.map(question => /*#__PURE__*/_jsxDEV(Question, {\n        onAddOption: addOption,\n        onDelete: deleteQuestion,\n        id: questions.indexOf(question),\n        question: question,\n        rename: rename,\n        switch: switchHandler\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 13\n  }, this);\n}\n\n_s(QuestionsTab, \"ZVxu5sK1RAXSCriaG97Umu247Mw=\");\n\n_c = QuestionsTab;\nexport default QuestionsTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionsTab\");","map":{"version":3,"sources":["C:/nust-polls/nust-polls-frontend/src/Components/Existing/NewPoll/CenteredTabs/QuestionsTab/QuestionsTab.js"],"names":["React","useEffect","useState","Plus","EditText","Question","v4","uuid","MCQ","constructor","statement","id","type","options","TextBased","Questions","questions","QuestionsTab","props","questionsList","name","setName","description","setDescription","changeName","value","console","log","setQuestions","rename","text","index","switchHandler","undefined","addOption","option","push","addQuestion","deleteQuestion","newQuestions","filter","question","indexOf","length","map"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Plus} from 'lucide-react'\r\nimport './QuestionsTab.css'\r\nimport {EditText} from 'react-edit-text';\r\nimport 'react-edit-text/dist/index.css';\r\nimport Question from \"./Question/Question\";\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nclass MCQ {\r\n    constructor(statement=\"Untitled Question\") {\r\n        this.id = uuid();\r\n        this.type = \"MCQ\"\r\n        this.statement = statement\r\n        this.options = [\"Option\"]\r\n    }\r\n}\r\n\r\n\r\nclass TextBased {\r\n    constructor(statement=\"Untitled Question\") {\r\n        this.id = uuid()\r\n        this.type = \"TextBased\"\r\n        this.statement = statement\r\n    }\r\n\r\n\r\n}\r\n\r\nclass Questions {\r\n    constructor() {\r\n        this.questions = []\r\n        this.questions[0] = new TextBased()\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction QuestionsTab(props) {\r\n\r\n    const questionsList = new Questions()\r\n\r\n    const [name, setName] = useState(\"\");\r\n\r\n    const [description, setDescription] = useState(\"\");\r\n\r\n    function changeName(value) {\r\n        console.log(value);\r\n        setName(value.value)\r\n    }\r\n\r\n\r\n    const [questions, setQuestions] = useState(questionsList.questions);\r\n\r\n\r\n    function rename(text,index) {\r\n        questions[index].statement = text\r\n        console.log(\"Renamed questions\")\r\n        console.log(questions)\r\n        return questions[index]\r\n    }\r\n\r\n\r\n    function switchHandler(text,index,type) {\r\n        if(index === undefined) {return}\r\n        if (questions[index].type !== type){\r\n            questions[index].type === \"MCQ\" ? questions[index] = new TextBased(text) : questions[index] = new MCQ(text)\r\n        }\r\n        console.log(questions)\r\n        return questions[index]\r\n    }\r\n\r\n    function addOption(index,option) {\r\n        if (questions[index].type === \"MCQ\") {\r\n            questions[index].options.push(option)\r\n        }\r\n        console.log(questions[index])\r\n        return questions[index].option\r\n    }\r\n\r\n    function addQuestion() {\r\n        setQuestions([...questions, new TextBased()])\r\n    }\r\n\r\n    function deleteQuestion(index) {\r\n        const newQuestions = questions.filter(question=>{\r\n            return questions.indexOf(question) !== index\r\n        })\r\n        setQuestions([...newQuestions])\r\n    }\r\n\r\n    return (<div>\r\n            <span className={\"floating-action\"}>\r\n                <Plus onClick={addQuestion} color={\"#085B91\"} strokeWidth={\"4\"} size={\"24\"}/>\r\n            </span>\r\n            <div className={\"poll-header\"}>\r\n                <EditText defaultValue={name} placeholder={\"Poll Name\"} onSave={changeName} className={\"poll-name\"}/>\r\n                <EditText defaultValue={description} placeholder={\"Poll Description\"} className={\"poll-desc\"}/>\r\n                {questions.length > 0 && questions.map((question) => (\r\n                    <Question  key={question.id} onAddOption={addOption} onDelete={deleteQuestion} id={questions.indexOf(question)} question={question} rename={rename} switch={switchHandler}/>))}\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nexport default QuestionsTab;"]},"metadata":{},"sourceType":"module"}