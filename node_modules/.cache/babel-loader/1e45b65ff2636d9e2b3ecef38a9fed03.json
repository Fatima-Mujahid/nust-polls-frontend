{"ast":null,"code":"var _excluded = [\"color\", \"size\", \"strokeWidth\", \"children\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { forwardRef, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport defaultAttributes from './defaultAttributes';\n/**\n * Converts string to KebabCase\n * Copied from scripts/helper. If anyone knows how to properly import it here\n * then please fix it.\n *\n * @param {string} string\n * @returns {string} A kebabized string\n */\n\nexport var toKebabCase = function toKebabCase(string) {\n  return string.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n};\nexport default (function (iconName, iconNode) {\n  var Component = forwardRef(function (_ref, ref) {\n    var _ref$color = _ref.color,\n        color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n        _ref$size = _ref.size,\n        size = _ref$size === void 0 ? 24 : _ref$size,\n        _ref$strokeWidth = _ref.strokeWidth,\n        strokeWidth = _ref$strokeWidth === void 0 ? 2 : _ref$strokeWidth,\n        children = _ref.children,\n        rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n    return createElement('svg', _extends({\n      ref: ref\n    }, defaultAttributes, {\n      width: size,\n      height: size,\n      stroke: color,\n      strokeWidth: strokeWidth,\n      className: \"lucide lucide-\" + toKebabCase(iconName)\n    }, rest), [].concat(iconNode.map(function (_ref2) {\n      var tag = _ref2[0],\n          attrs = _ref2[1];\n      return createElement(tag, attrs);\n    }), children || []));\n  });\n  Component.propTypes = {\n    color: PropTypes.string,\n    size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  };\n  Component.displayName = \"\" + iconName;\n  return Component;\n});","map":{"version":3,"sources":["C:/nust-polls/nust-polls-frontend/node_modules/lucide-react/dist/esm/createReactComponent.js"],"names":["_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","forwardRef","createElement","PropTypes","defaultAttributes","toKebabCase","string","replace","toLowerCase","iconName","iconNode","Component","_ref","ref","_ref$color","color","_ref$size","size","_ref$strokeWidth","strokeWidth","children","rest","width","height","stroke","className","concat","map","_ref2","tag","attrs","propTypes","oneOfType","number","displayName"],"mappings":"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","sourcesContent":["var _excluded = [\"color\", \"size\", \"strokeWidth\", \"children\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { forwardRef, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport defaultAttributes from './defaultAttributes';\n/**\n * Converts string to KebabCase\n * Copied from scripts/helper. If anyone knows how to properly import it here\n * then please fix it.\n *\n * @param {string} string\n * @returns {string} A kebabized string\n */\n\nexport var toKebabCase = function toKebabCase(string) {\n  return string.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n};\nexport default (function (iconName, iconNode) {\n  var Component = forwardRef(function (_ref, ref) {\n    var _ref$color = _ref.color,\n        color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n        _ref$size = _ref.size,\n        size = _ref$size === void 0 ? 24 : _ref$size,\n        _ref$strokeWidth = _ref.strokeWidth,\n        strokeWidth = _ref$strokeWidth === void 0 ? 2 : _ref$strokeWidth,\n        children = _ref.children,\n        rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n    return createElement('svg', _extends({\n      ref: ref\n    }, defaultAttributes, {\n      width: size,\n      height: size,\n      stroke: color,\n      strokeWidth: strokeWidth,\n      className: \"lucide lucide-\" + toKebabCase(iconName)\n    }, rest), [].concat(iconNode.map(function (_ref2) {\n      var tag = _ref2[0],\n          attrs = _ref2[1];\n      return createElement(tag, attrs);\n    }), children || []));\n  });\n  Component.propTypes = {\n    color: PropTypes.string,\n    size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  };\n  Component.displayName = \"\" + iconName;\n  return Component;\n});"]},"metadata":{},"sourceType":"module"}